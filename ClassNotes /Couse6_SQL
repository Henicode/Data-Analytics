How does the syntax of a CREATE statement look?

          CREATE TABLE table_name (
              column1 datatype,
              column2 datatype,
              column3 datatype,
             ....
          );

How does the syntax of an ALTER statement look?

          ALTER TABLE table_name
          ADD COLUMN column_name data_type column_constraint;

          ALTER TABLE table_name
          DROP COLUMN column_name;

          ALTER TABLE table_name
          ALTER COLUMN column_name SET DATA TYPE data_type;

          ALTER TABLE table_name
          RENAME COLUMN current_column_name TO new_column_name;
          
How does the syntax of a TRUNCATE statement look?

          TRUNCATE TABLE table_name;
          
How does the syntax of a DROP statement look?

          DROP TABLE table_name;
          
Retrieve all employees whose address is in Elgin,IL.         
          
          SELECT F_NAME , L_NAME
          FROM EMPLOYEES
          WHERE ADDRESS LIKE '%Elgin,IL%';
          
Retrieve all employees who were born during the 1970's.          
          
          SELECT F_NAME , L_NAME
          FROM EMPLOYEES
          WHERE B_DATE LIKE '197%';
          
Retrieve all employees in department 5 whose salary is between 60000 and 70000.          
         
         SELECT *
         FROM EMPLOYEES
         WHERE (SALARY BETWEEN 60000 AND 70000) AND DEP_ID = 5;
         
Retrieve a list of employees ordered by department ID.          
          
        SELECT F_NAME, L_NAME, DEP_ID 
        FROM EMPLOYEES
        ORDER BY DEP_ID;  

Retrieve a list of employees ordered in descending order by department ID and 
within each department ordered alphabetically in descending order by last name.
          
       SELECT F_NAME, L_NAME, DEP_ID 
       FROM EMPLOYEES
       ORDER BY DEP_ID DESC, L_NAME DESC;   
          
 use department name instead of department ID. Retrieve a list of employees ordered by department name, 
 and within each department ordered alphabetically in descending order by last name.          
          
       SELECT D.DEP_NAME , E.F_NAME, E.L_NAME
       FROM EMPLOYEES as E, DEPARTMENTS as D
       WHERE E.DEP_ID = D.DEPT_ID_DEP
       ORDER BY D.DEP_NAME, E.L_NAME DESC;   
          
For each department ID retrieve the number of employees in the department.          
          
      SELECT DEP_ID, COUNT(*)
      FROM EMPLOYEES
      GROUP BY DEP_ID;    

For each department retrieve the number of employees in the department, and the average employee salary in the department..          
          
      SELECT DEP_ID, COUNT(*), AVG(SALARY)
      FROM EMPLOYEES
      GROUP BY DEP_ID;    
          
          
          
          
          
          
          
          
          
          
